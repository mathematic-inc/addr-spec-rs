name: Continuous integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  checks:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Set up cache
        uses: actions/cache@87396fe6b4d327202df854ff5b3e0a4ea3d77ac6
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain update nightly
          rustup default nightly
      - name: Install Clippy
        run: rustup component add clippy
      - name: Lint code
        run: cargo clippy --locked --all-features -- -D warnings
      - name: Install rustfmt
        run: rustup component add rustfmt --toolchain nightly
      - name: Check format
        run: cargo fmt --check
      - name: Install other tools
        run: |
          cargo install --locked cargo-deny || true
          cargo install --locked cargo-udeps || true
      - name: Check everything else
        run: |
          cargo deny check
          cargo udeps
  tests:
    name: Test on ${{ matrix.os.name }} (${{ matrix.channel }})
    runs-on: ${{ matrix.os.value }}
    strategy:
      matrix:
        os:
          - name: Linux
            value: ubuntu-latest
          - name: Windows
            value: windows-latest
          - name: macOS
            value: macos-latest
        channel:
          - stable
          - beta
          - nightly
    steps:
      - name: Check out repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Set up cache
        uses: actions/cache@87396fe6b4d327202df854ff5b3e0a4ea3d77ac6
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain update ${{ matrix.channel }}
          rustup default ${{ matrix.channel }}
      - name: Run tests
        run: python3 tools/cargo-test-runner.py --locked --feature-sets default:white-spaces:literals:literals,comments

  success:
    name: Success
    needs: [checks, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "Success!"
