name: Continuous integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  checks:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Set up Cargo cache
        uses: ./.github/actions/cargo-cache
        with:
          key: ${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust (nightly)
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          profile: minimal
          toolchain: nightly
          default: true
          override: true
      - name: Install Rust linters
        run: rustup component add clippy rustfmt
      - name: Lint Rust code
        run: |
          cargo fmt --check
          cargo clippy --locked --all-features -- -D warnings
      - name: Install other tools
        run: |
          cargo install --locked cargo-deny
          cargo install --locked cargo-udeps
      - name: Check everything else
        run: |
          cargo deny check
          cargo udeps
  tests:
    name: Test on ${{ matrix.os.name }} (${{ matrix.channel }})
    runs-on: ${{ matrix.os.value }}
    strategy:
      matrix:
        os:
          - name: Linux
            value: ubuntu-latest
          - name: Windows
            value: windows-latest
          - name: macOS
            value: macos-latest
        channel:
          - stable
          - beta
          - nightly
    steps:
      - name: Check out repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Set up Cargo cache
        uses: ./.github/actions/cargo-cache
        with:
          key: ${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust (${{ matrix.channel }})
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          profile: minimal
          toolchain: ${{ matrix.channel }}
          default: true
          override: true
      - name: Run tests
        run: python3 tools/cargo-test-runner.py --locked --feature-sets default:white-spaces:literals:literals,comments
  success:
    name: Success
    needs: [checks, tests]
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Failure
        if: failure()
        run: echo "Failure!"; exit 1
      - name: Success
        if: success()
        run: echo "Success!"
